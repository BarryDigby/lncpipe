{
    "docs": [
        {
            "location": "/", 
            "text": "LncPipe\n\n\n\n \n\n\nOverall\n\n\nRecently, long noncoding RNA molecules (lncRNA) captured widespread attentions for its critical \nroles in diverse biological process and important implications in variety of human diseases and \ncancers. Identification and profiling of lncRNAs is a fundamental step to advance our knowledge \non their function and regulatory mechanisms. However, RNA sequencing based lncRNA discovery is \nlimited due to complicated operations and implementation. Therefore, we presented a one-stop \npipeline called \nLncPipe\n focused on characterizing lncRNAs from raw transcriptome sequencing \ndata. The pipeline was developed based on a popular workflow framework \nNextflow\n, composed of \nfour core procedures including reads alignment, assembly, identification and quantification. \nIt contains various unique features such as well-designed lncRNAs annotation strategy, optimized \ncalculating efficiency, diversified classification and interactive analysis report. Additionally, \n\nLncPipe\n  allows users cancel pipeline, reset parameters from command or modifying main script \ndirectly and resume analysis from continues checkpoint. \n\n\nTable of Contents\n\n\n\n\n\n\n\n\n\n\nSchematic diagram\n\n\nInstallation\n\n\nRun Docker\n\n\nInteractive reports\n\n\nParameters\n\n\nFAQ\n\n\nAcknowledgements\n\n\nContact\n\n\nLicense\n\n\n\n\nSchematic diagram\n\n\nInstallation\n\n\nNextflow\n\nLncPipe is implemented with Nextflow pipeline manage system. To run our pipelines. \nNextflow\n should be preinstalled at  POSIX compatible system (Linux, Solaris, OS X, etc), It requires BASH and Java 7 or higher to be installed. We do not recommend running the pipes in the Windows since most of bioinformatic tools do not supported.\nHere, we show the step by step installation of \nNextflow\n in linux system as an example, which adapted from \nNextFlow\n.\n\n\n\n\nDownload the executable package by copying and pasting the following command in your terminal window:\nwget -qO- get.nextflow.io | bash\n\n\n\n\n\n\n\n\n\nIt will create the \nNextflow\n main executable file in the current directory.\n\n\n\n\n\n\n\n\nOptionally, move the nextflow file in a directory accessible by your \n$PATH\n variable (this is only required to avoid to remember and type the Nextflow full path each time you need to run it).\nOf course you can download the lastest binary version of NextFlow by yourself from the https://github.com/nextflow-io/nextflow/releases and add the path into your system environment.\nAll those pipelines were written in \nNextflow\n commands. For more details, please see \nhere\n.\n\n\n\n\n\n\nA type command for run nextflow  \n\n\n\n\n\n\nnextflow run LncRNAanalysisPipe.nf \n\n\nPrepare input files\n\n\nReferences, index and annotation files\uff08required\uff09\n\n\n\n\nHisat\n index (e.g. human index can be downloaded from ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grch38_tran.tar.gz) or \nSTAR\n index (hg38 genome index etc.) according aligner your are going to use. \n    \n Building index of hisat relatively require large amount of memory, thus we sugguested that users downloaded it directly from the hisat website.  \n\n\nGenome reference (genome fasta file with suffix \n.fa\n , \nUCSC\n etc.).   \n\n\nGENCODE gene annotation file in GTF format  \n\n\nLNCipedia gene annotation file in GTF format.(set null if not available for your species)  \n\n\nRaw sequence file with *.fastq.gz / *.fq.gz suffixed  \n\n\n\n\n\n\n\n\nSupported species\n\n\nCurrently, LncPipe was designed for human only, but it also support other species which required users providing \"known_protein_coding.gtf\" and  \"known_lncRNA.gtf \"\nthe detail usage for non-human species could be found here.\n\n\n\n\n\n\n\nhuman \n\n\n\n\nhisat index: ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grch38_tran.tar.gz\n\n\nGenome reference: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/GRCh38.p10.genome.fa.gz\n\n\nGENCODE gene annotation: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.annotation.gtf.gz\n\n\nLNCipedia gene annotation: https://lncipedia.org/downloads/lncipedia_5_0_hc_hg38.gtf\n\n\nRaw sequence file with *.fastq.gz / *.fq.gz suffixed\n\n\n\n\n\n\n\n\nmouse \n\n\n\n\nhisat index: ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grcm38_tran.tar.gz\n\n\nGenome reference: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M16/GRCm38.p5.genome.fa.gz\n\n\nGENCODE gene annotation: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M16/gencode.vM16.annotation.gtf.gz\n\n\nLNCipedia gene annotation: null\n\n\nRaw sequence file with *.fastq.gz / *.fq.gz suffixed\n\n\n\n\n\n\n\n\nRun Docker\n\n\n\n\nPrepare input files.\n\n\nModify the \ndocker.config\n in \nmandatory\n section.\n\n\nInstall docker\n\n\nCommand\nnextflow -c docker.config run LncRNAanalysisPipe.nf\n\n\n\n\n\n\n\ndocker image can be downloaded from https://hub.docker.com/r/bioinformatist/lncpipe/tags/ with the latest tag. \n\n\n\n\nAlternatively, nextflow can automatically pull image from docker.io. \nDockerfile\n recorded  that what we have done with the image. For docker pull image from local china, \nwe suggest users using mirror site instead\n.\n\n\n\n\nDependencies\n\n\nPrerequisites install command (required when docker image is not favored, you should execute them via root)  \n\n\n\n\n\n\nHISAT2\n\n\naria2c ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.1.0-Linux_x86_64.zip -q -o /opt/hisat2-2.1.0-Linux_x86_64.zip \n \\\nunzip -qq /opt/hisat2-2.1.0-Linux_x86_64.zip -d /opt/ \n \\\nrm /opt/hisat2-2.1.0-Linux_x86_64.zip \n \\\ncd /opt/hisat2-2.1.0 \n \\\nrm -rf doc example *debug MANUAL* NEWS TUTORIAL \n \\\nln -s /opt/hisat2-2.1.0/hisat2* /usr/local/bin/ \n \\\nln -sf /opt/hisat2-2.1.0/*.py /usr/local/bin/\n\n\n\n\n\n\n\nStringTie\n  \n\n\naria2c http://ccb.jhu.edu/software/stringtie/dl/stringtie-1.3.3b.Linux_x86_64.tar.gz -q -o /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz \n \\\ntar xf /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\nrm /opt/stringtie-1.3.3b.Linux_x86_64/README \n \\\nln -s /opt/stringtie-1.3.3b.Linux_x86_64/stringtie /usr/local/bin/stringtie \n \\\nrm /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz\n\n\n\n\n\n\n\ngffcompare\n  \n\n\naria2c https://github.com/gpertea/gffcompare/archive/master.zip -q -o /opt/gffcompare-master.zip \n \\  \naria2c https://github.com/gpertea/gclib/archive/master.zip -q -o /opt/gclib-master.zip \n \\  \nunzip -qq /opt/gffcompare-master.zip -d /opt/ \n \\  \nunzip -qq /opt/gclib-master.zip -d /opt/ \n \\  \nrm /opt/gffcompare-master.zip /opt/gclib-master.zip \n \\  \ncd /opt/gffcompare-master \n \\  \nmake release\n\n\n\n\n\n\n\nBedops\n:\n\n\naria2c https://github.com/bedops/bedops/releases/download/v2.4.29/bedops_linux_x86_64-v2.4.29.tar.bz2 -q -o /opt/bedops_linux_x86_64-v2.4.29.tar.bz2 \n \\\ntar xf /opt/bedops_linux_x86_64-v2.4.29.tar.bz2 --use-compress-prog=pbzip2 -C /opt/ \n \\\nln -s /opt/bin/* /usr/local/bin/ \n \\\nrm /opt/bedops_linux_x86_64-v2.4.29.tar.bz2\n\n\n\n\n\n\n\nPLEK\n:\n\n\naria2c https://nchc.dl.sourceforge.net/project/plek/PLEK.1.2.tar.gz -q -o /opt/PLEK.1.2.tar.gz \n \\\ntar xf /opt/PLEK.1.2.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\ncd /opt/PLEK.1.2/ \n \\\npython PLEK_setup.py || : \n \\\nrm *.pdf *.txt *.h *.c *.fa *.cpp *.o *.R *.doc PLEK_setup.py \n \\\nchmod 755 * \n \\\nperl -CD -pi -e'tr/\\x{feff}//d \n s/[\\r\\n]+/\\n/' *.py \n \\\nln -s /opt/PLEK.1.2/* /usr/local/bin/ \n \\\nrm /opt/PLEK.1.2.tar.gz\n\n\n\n\n\n\n\nCNCI\n:  \n\n\naria2c https://codeload.github.com/www-bioinfo-org/CNCI/zip/master -q -o /opt/CNCI-master.zip \n \\\nunzip -qq /opt/CNCI-master.zip -d /opt/ \n \\\nrm /opt/CNCI-master.zip \n \\\nunzip -qq /opt/CNCI-master/libsvm-3.0.zip -d /opt/CNCI-master/ \n \\\nrm /opt/CNCI-master/libsvm-3.0.zip \n \\\ncd /opt/CNCI-master/libsvm-3.0 \n \\\nmake \n /dev/null 2\n1 \n \\\nshopt -s extglob \n \\\nrm -rfv !\\(\"svm-predict\"\\|\"svm-scale\"\\) \n \\\ncd .. \n \\\nrm draw_class_pie.R LICENSE README.md \n \\\nchmod -R 755 * \n \\\nln -s /opt/CNCI-master/*.py /usr/local/bin/\n\n\n\n\n\n\n\nCPAT\n:\nCitation\n\n\naria2c https://jaist.dl.sourceforge.net/project/rna-cpat/v1.2.3/CPAT-1.2.3.tar.gz -q -o /opt/CPAT-1.2.3.tar.gz \n \\\ntar xf /opt/CPAT-1.2.3.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\ncd /opt/CPAT-1.2.3/ \n \\\nmv dat/* /LncPipeDB/ \n \\\npython setup.py install \n /dev/null 2\n1 \n \\\nrm -rf /opt/CPAT*\n\n\n\n\n\n\n\nFastQC\n\n\naria2c https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip -q -o /opt/fastqc_v0.11.5.zip \n \\\nunzip -qq /opt/fastqc_v0.11.5.zip -d /opt/ \n \\\nrm /opt/fastqc_v0.11.5.zip \n \\\ncd /opt/FastQC \n \\\nshopt -s extglob \n \\\nrm -rfv !\\(\"fastqc\"\\|*.jar\\) \n \\\nchmod 755 * \n \\\nln -s /opt/FastQC/fastqc /usr/local/bin/\n\n\n\n\n\n\n\nor \nAfterQC\n\n\n    aria2c https://github.com/OpenGene/AfterQC/archive/v0.9.7.tar.gz -q -o /opt/AfterQC-0.9.7.tar.gz \n \\\n    tar xf /opt/AfterQC-0.9.7.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\n    cd /opt/AfterQC-0.9.7 \n \\\n    make \n \\\n    perl -i -lape's/python/pypy/ if $. == 1' after.py \n \\\n    rm -rf Dockerfile Makefile README.md testdata report_sample \n \\\n    rm editdistance/*.cpp editdistance/*.h \n \\\n    ln -s /opt/AfterQC-0.9.7/*.py /usr/local/bin/ \n \\\n    rm /opt/AfterQC-0.9.7.tar.gz\n\n\n\nWhen using afterQC, we recommended that users install \npypy\n in your operation system, which can accelerated about 3X speed for raw reads processing, as \nsuggested\n by author of AfterQC.\n\n\n\n\n\n\nLncPipeReporter\n\n\nInstall [pandoc](https://pandoc.org/installing.html) first. Then run commands:\n\nRscript -e \"install.packages('devtools'); devtools::install_github('bioinformatist/LncPipeReporter')\"\n\nFor detailed usage of LncPipeReporter in case you are going to run it separately, plz refers to [README](https://github.com/bioinformatist/LncPipeReporter#lncpipereporter) of LncPipeReporter.\n\n\n\n\n\n\n\nkallisto\n\n\naria2c https://github.com/pachterlab/kallisto/releases/download/v0.43.1/kallisto_linux-v0.43.1.tar.gz -q -o  /opt/kallisto_linux-v0.43.1.tar.gz \n \\\ntar xf /opt/kallisto_linux-v0.43.1.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\ncd /opt \n \\\nrm ._* kallisto_linux-v0.43.1.tar.gz \n \\\ncd kallisto_linux-v0.43.1 \n \\\nrm -rf ._*  README.md test \n \\\nln -s /opt/kallisto_linux-v0.43.1/kallisto /usr/local/bin/\n\n\n\n\n\n\n\nsambamba\n\n\n    aria2c https://github.com/biod/sambamba/releases/download/v0.6.7/sambamba_v0.6.7_linux.tar.bz2 -q -o /opt/sambamba_v0.6.7_linux.tar.bz2 \n \\\n    tar xf /opt/sambamba_v0.6.7_linux.tar.bz2 --use-compress-prog=pbzip2 -C /opt/ \n \\\n    ln -s /opt/sambamba /usr/local/bin/ \n \\\n    rm /opt/sambamba_v0.6.7_linux.tar.bz2\n\n\n\n\n\n\n\nAlternatively, when you are going to using STAR-Cufflinks in your system, the corresponding installation command should be as follows:\n  \n\n\n\n\n\n\nSTAR\n\n\naria2c https://raw.githubusercontent.com/alexdobin/STAR/master/bin/Linux_x86_64/STAR -q -o /opt/STAR \n \\\nchmod 755 /opt/STAR \n \\\nln -s /opt/STAR /usr/local/bin\n\n\n\n\n\n\n\nCufflinks\n\n\naria2c https://github.com/bioinformatist/cufflinks/releases/download/v2.2.1/cufflinks-2.2.1.Linux_x86_64.tar.gz -q -o /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz \n \\\ntar xf /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz --use-compress-prog=pigz -C /opt/ \n \\\nrm /opt/cufflinks-2.2.1.Linux_x86_64/README \n \\\nln -s /opt/cufflinks-2.2.1.Linux_x86_64/* /usr/local/bin/ \n \\\nrm /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz\n\n\n\n\n\n\n\n\n\nThe \ngffcompare\n utility share the same function as \ncuffcompare\n, therefore, in STAR-cufflinks analysis pipe \ngffcompare\n is not required.\n\n\n\n\nInteractive reports\n\n\nLncPipe output was well-summarized in an interactive manner, which was carried out by a novel-developing R package\n\nLncPipeReporter\n.\n\n\nConfiguration\n\n\nAs a nextflow-based analysis pipeline, LncPipe allow users edit configure file \nnextflow.config\n to set the index files and default file path parameters instead of typing in command.\nWe strongly recommended that users using config file rather than command input to adjust their parameters.\nFor example, plz go to \nparams\n line, and set the following information of your operation system and environment\ngroovy\n\n\n    params {\n    /*\n        User setting options (mandatory)\n         */\n    // input file and genome reference()\n        fastq_ext = '*_{1,2}.clean.fq.gz'\n        fasta_ref = '/data/database/hg38/genome.fa'\n        design = 'design.file'\n        hisat2_index = '/data/database/hg38/hisatIndex/grch38_snp_tran/genome_snp_tran'\n        gencode_annotation_gtf = \"/data/database/hg38/Annotation/gencode.v24.annotation.gtf\"\n        lncipedia_gtf = \"/data/database/hg38/Annotation/lncipedia_4_0_hg38.gtf\"\n        cpatpath = '/home/zhaoqi/software/CPAT/CPAT-1.2.2'\n\n    /*\n        User setting options (optional)\n         */\n        star_idex = ''//set if star used\n        bowtie2_index = ''//set if tophat used\n        aligner = \"hisat\" // or \"star\",\"tophat\"\n        sam_processor=\"sambamba\"//or \"samtools\"\n        qctools = \"fastqc\" // or \"afterqc\",\"fastp\"\n        singleEnd = false\n        unstrand = false\n        skip_combine = false\n        lncRep_Output = 'reporter.html'\n        lncRep_theme = 'npg'\n        lncRep_cdf_percent = 10\n        lncRep_max_lnc_len = 10000\n        lncRep_min_expressed_sample = 50\n        mem=60//Gb\n        cpu=30\n    }\n\n\n\nParameters\n\n\n\n\nThose parameters would cover the setting from \nnextflow.config\n file\n\n Mandatory(plz configure those in \nnextflow.config* file)\n\n\n\n\n\n\n\n\n\n\nName\n\n\nExample/Default value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--input_folder\n\n\n.\n\n\ninput folder\n\n\n\n\n\n\n--species\n\n\nhuman\n\n\nYour species, mouse, fly and zebra fish are also supported\n\n\n\n\n\n\n--fastq_ext\n\n\n*_{1,2}.fastq.gz\n\n\ninput raw paired reads\n\n\n\n\n\n\n--out_folder\n\n\n.\n\n\noutput folder\n\n\n\n\n\n\n--design\n\n\nFALSE\n\n\na txt file that stored experimental design information, plz see details from \n--design\n section below\n\n\n\n\n\n\n\n\n\n\nReferences\n\n\n\n\n\n\n\n\n\n\nName\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--star_index/--bowtie2_index/--hisat2_index\n\n\n-\n\n\nPath to STAR\uff0fbowtie2/hisat2(mutually exclusive) index(required if not set in config file)\n\n\n\n\n\n\n--fasta\n\n\n-\n\n\nPath to Fasta reference(required if not set in config file)\n\n\n\n\n\n\n--gencode_annotation_gtf\n\n\n-\n\n\nAn annotation file from GENCODE database for annotating lncRNAs(required if not set in config file). e.g. \ngencode.v26.annotation.gtf\n\n\n\n\n\n\n--lncipedia_gtf\n\n\n-\n\n\nAn annotation file from LNCipedia database for annotating lncRNAs(required if not set in config file) e.g. \nlncipedia_4_0_hc_hg38.gtf\n\n\n\n\n\n\n\n\n\n\nsoftware path (should not setting when using docker )\n\n\n\n\n\n\n\n\n\n\nName\n\n\nRequired\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--cpatpath\n\n\n-\n\n\nHome folder of cpat installed location\n\n\n\n\n\n\n\n\n\n\nsince cpat may call model data from its home path, users should specified where the model file is located in. Especially users install cpat by themselves without our install code.  \n\n\n\n\n\n\nOptional\n\n\n\n\n\n\n\n\n\n\nName\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--singleEnd\n\n\nFALSE\n\n\nspecify that the reads are single ended\n\n\n\n\n\n\n--merged_gtf\n\n\nFALSE\n\n\nSkip mapping and assembly step by directly providing assembled merged gtf files\n\n\n\n\n\n\n--unstrand\n\n\nFALSE\n\n\nspecify that library is unstrand specific\n\n\n\n\n\n\n--aligner\n\n\nstar\n\n\nAligner for reads mapping (optional), STAR is default and supported only at present,\nstar\n/\ntophat\n/\nhisat2\n\n\n\n\n\n\n--qctools\n\n\nafterqc\n\n\nTools for assess raw reads quality or filtered by AfterQC, \nfastqc\n or \nafterqc\n\n\n\n\n\n\n\n\n\n\nLncPipeReporter options\n\n\n\n\n\n\n\n\n\n\nName\n\n\nDefault value\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--lncRep_Output\n\n\nreporter.html\n\n\nSpecify report file name.\n\n\n\n\n\n\n--lncRep_theme\n\n\nnpg\n\n\nPlot theme setting in interactive plot. Values from \nggsci\n\n\n\n\n\n\n--lncRep_min_expressed_sample\n\n\n50\n\n\nMinimum expressed gene allowed in each sample, 50 default. Samples not passed were filtered from analysis\n\n\n\n\n\n\n\n\n--fastq_ext\n\n\n\n\nRaw fastq files were required for denovo analysis.This parameters should be set according to your paired or singled reads file names.\nSuppose your paired end sequence files are compressed with \n.gz\n suffixed.\nFor example:\n\n\n\n\n    Sample1_1.fq.gz\n    Sample1_2.fq.gz\n    Sample2_1.fq.gz\n    Sample2_2.fq.gz\n\n\n\nThen you can input pattern \n*_{1,2}.fq.gz\n to make the all paired end file recognized by \nLncPipe\n .\n\n\nFor singled reads file, file pattern should be feed with \n--singleEnd\n specified.\n\n\n--star_idex\uff0f--bowtie2_index/--hisat2_index\n\n\n\n\nThis parameter is \nrequired\n when not configured in nextflow.config file. It specify the star/tophat/hisat2(mutually exclusive) index folder built before running \nLncPipe\n .\nIf you don't know what it is\uff0cYou can use \n--fasta\n to specify the reference sequence data. The index file would be built by \nLncPipe\n  automatically.\n\n\n\n\n--design\n\n\n\n\nExperimental design file matrix for differential expression analysis. Default: \nnull\n\nFormat:\n\n\n\n\nWT:Sample1,Sample2,Sample3\nKO:Sample1,Sample2,Sample3\n\n\n\nWhile \nKO/WT\n represents the two experimental condition, and sample1, sample2, sample3 are replicates which should be comma-delimited in the same line .\n\n\nFor sample names, it should be the sample as the prefix of fastq files which was trimmed by \n--fastq_ext\n.\n\n\nFor example:\n\n\nif fastq file names are \nSample1_1.fq.gz, Sample1_2.fq.gz\n that comes from one sample and your \n--fastq_ext\n is set as \n*_{1,2}.fq.gz\n, the sample name\nshould be Sample1.\n\n\nOutput\n\n\nWhile the whole pipeline is finished properly, there is \nResult\n folder under current path(default) or output_folder set by user. The basic structure of Result is follows:\n\n\n    Result/\n    \u251c\u2500\u2500 QC\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141_1.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141_2.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1177_1.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 N1177_2.clean_fastqc.html\n    \u251c\u2500\u2500 Identified_lncRNA\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 all_lncRNA_for_classifier.gtf\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 final_all.fa\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 final_all.gtf\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 lncRNA.fa\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 protein_coding.fa\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 protein_coding.final.gtf\n    \u251c\u2500\u2500 LncReporter\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Differential_Expression_analysis.csv\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 Report.html\n    \u251c\u2500\u2500 Quantification\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kallisto.count.txt\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 kallisto.tpm.txt\n    \u2514\u2500\u2500 Star_alignment\n        \u251c\u2500\u2500 STAR_N1141\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Aligned.sortedByCoord.out.bam\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.final.out\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.out\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.progress.out\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 N1141SJ.out.tab\n        \u2514\u2500\u2500 STAR_N1177\n            \u251c\u2500\u2500 N1177Aligned.sortedByCoord.out.bam\n            \u251c\u2500\u2500 N1177Log.final.out\n            \u251c\u2500\u2500 N1177Log.out\n            \u251c\u2500\u2500 N1177Log.progress.out\n            \u2514\u2500\u2500 N1177SJ.out.tab\n\n\n\n\n\nQC\n stored the Quality control output generated by FastQC or AfterQC software.\n\n\nIdentified_lncRNA\n contains all assembled lncRNA and their sequences. \nall_lncRNA_for_classifier.gtf\n includes both novel and known lncRNA features in \nGTF format\n;\n\nlncRNA.fa\n is all lncRNA sequences in fasta format. \nprotein_coding.final.gtf\n and \nprotein_coding.fa\n are protein coding information extracted from gencode annotation. \nfinal_all.gtf\n and \nfinal_all.fa\n are combined files for further analysis.\n\n\nAlignment\n are hisat/tophat/STAR aligner standard output\n\n\nQuantification\n are estimated abundance using kallisto. \nkallisto.count.txt\n stored reads count matrix and \nkallisto.tpm.txt\n are tpm(Transcripts Per Kilobase Million) matrix.\n\n\nLncReporter\n stored the interactive report file and differential expression matrix generated by LncPipeReporter which wrapped EdgeR.\n\n\n\n\nTips\n\n\n\n\n:blush:Plz keep the consistency of your genome sequence, index library and annotation files: genome version, chromosome format, gtf coordinated e.g. The third-party software may stop for any of the above reasons. \n\n\n:confused:Setting your analysis parameters always in config file, differ project should  corresponding to differ configurations for reproductive analysis. To rerun a project, you can just specify -c \nyour.config\n in your command, which can also help you to record analysis parameters.\n\n\n:open_mouth:Run analysis on docker container, no much to say.\n\n\n:grimacing:Always use the latest version to be away from the known bugs. \n\n\n\n\nAcknowledgement\n\n\nThanks to the author of \nAfterQC\n, Shifu Chen, for his help on providing a gzip output support to meet the require of LncPipe.  Thanks to the internal test by Hongwan Zhang and Yan Wang from SYSUCC Cancer bioinformatics platform.\n\n\nFAQ\n\n\n\n\n\n\n1. PLEK throws an error \"/data/software/PLEK.1.2/PLEK.py:line12: $'\\r': can not find command\", how to fix?\n\n\n\n\nA: using the follow command as suggested in the installation section. \n\n\n\n\nperl -CD -pi -e'tr/\\x{feff}//d \n s/[\\r\\n]+/\\n/' *.py\n\n\n\n\n\n\n\n2. IOError: [Errno 2] No such file or directory: '/opt/CPAT-1.2.3/dat/Human_Hexamer.tsv'?\n\n\n\n\nA: The cpat command required  the \nHuman_Hexamer.tsv\n to predict lncRNA coding potential, plz check your \ncpatpath\n parameters. \n\n\n\n\n\n\n3. When using htseq to quantify transicript, it throws \"Error occured when reading beginning of SAM/BAM file. 'csamtools.AlignedRead' object has no attribute 'reference_start' \"\n\n\nA: It's a version conflict caused by htseq and hisat generated bamfile, a possible solution for this is to install the old version of htseq\n\n\n\n\n\n\n\n\nContact\n\n\nFor implementation:\n\n\n \nQi Zhao\n zhaoqi@sysucc.org.cn, Sun Yat-sen University Cancer Center;\n\n\n \nYu Sun\n  sun_yu@mail.nankai.edu.cn, Nan kai University;\n\nFor project design and new feature request:\n\n\n \nQi Zhao\n zhaoqi@sysucc.org.cn, Sun Yat-sen University Cancer Center;\n\n\n \nZhixiang Zuo\n zuozhx@sysucc.org.cn, Sun Yat-sen University Cancer Center;  \n\n\n\n\nWe strongly recommend users open new issues if they have questions or find bugs.\n\n\n\n\nLicense\n\n\nGPL v3 license\n\n\nCitation", 
            "title": "Home"
        }, 
        {
            "location": "/#lncpipe", 
            "text": "", 
            "title": "LncPipe"
        }, 
        {
            "location": "/#overall", 
            "text": "Recently, long noncoding RNA molecules (lncRNA) captured widespread attentions for its critical \nroles in diverse biological process and important implications in variety of human diseases and \ncancers. Identification and profiling of lncRNAs is a fundamental step to advance our knowledge \non their function and regulatory mechanisms. However, RNA sequencing based lncRNA discovery is \nlimited due to complicated operations and implementation. Therefore, we presented a one-stop \npipeline called  LncPipe  focused on characterizing lncRNAs from raw transcriptome sequencing \ndata. The pipeline was developed based on a popular workflow framework  Nextflow , composed of \nfour core procedures including reads alignment, assembly, identification and quantification. \nIt contains various unique features such as well-designed lncRNAs annotation strategy, optimized \ncalculating efficiency, diversified classification and interactive analysis report. Additionally,  LncPipe   allows users cancel pipeline, reset parameters from command or modifying main script \ndirectly and resume analysis from continues checkpoint.", 
            "title": "Overall"
        }, 
        {
            "location": "/#table-of-contents", 
            "text": "Schematic diagram  Installation  Run Docker  Interactive reports  Parameters  FAQ  Acknowledgements  Contact  License", 
            "title": "Table of Contents"
        }, 
        {
            "location": "/#schematic-diagram", 
            "text": "", 
            "title": "Schematic diagram"
        }, 
        {
            "location": "/#installation", 
            "text": "Nextflow \nLncPipe is implemented with Nextflow pipeline manage system. To run our pipelines.  Nextflow  should be preinstalled at  POSIX compatible system (Linux, Solaris, OS X, etc), It requires BASH and Java 7 or higher to be installed. We do not recommend running the pipes in the Windows since most of bioinformatic tools do not supported.\nHere, we show the step by step installation of  Nextflow  in linux system as an example, which adapted from  NextFlow .   Download the executable package by copying and pasting the following command in your terminal window: wget -qO- get.nextflow.io | bash     It will create the  Nextflow  main executable file in the current directory.     Optionally, move the nextflow file in a directory accessible by your  $PATH  variable (this is only required to avoid to remember and type the Nextflow full path each time you need to run it).\nOf course you can download the lastest binary version of NextFlow by yourself from the https://github.com/nextflow-io/nextflow/releases and add the path into your system environment.\nAll those pipelines were written in  Nextflow  commands. For more details, please see  here .    A type command for run nextflow      nextflow run LncRNAanalysisPipe.nf", 
            "title": "Installation"
        }, 
        {
            "location": "/#prepare-input-files", 
            "text": "", 
            "title": "Prepare input files"
        }, 
        {
            "location": "/#references-index-and-annotation-filesrequired", 
            "text": "Hisat  index (e.g. human index can be downloaded from ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grch38_tran.tar.gz) or  STAR  index (hg38 genome index etc.) according aligner your are going to use. \n      Building index of hisat relatively require large amount of memory, thus we sugguested that users downloaded it directly from the hisat website.    Genome reference (genome fasta file with suffix  .fa  ,  UCSC  etc.).     GENCODE gene annotation file in GTF format    LNCipedia gene annotation file in GTF format.(set null if not available for your species)    Raw sequence file with *.fastq.gz / *.fq.gz suffixed", 
            "title": "References, index and annotation files\uff08required\uff09"
        }, 
        {
            "location": "/#supported-species", 
            "text": "Currently, LncPipe was designed for human only, but it also support other species which required users providing \"known_protein_coding.gtf\" and  \"known_lncRNA.gtf \"\nthe detail usage for non-human species could be found here.    human    hisat index: ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grch38_tran.tar.gz  Genome reference: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/GRCh38.p10.genome.fa.gz  GENCODE gene annotation: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.annotation.gtf.gz  LNCipedia gene annotation: https://lncipedia.org/downloads/lncipedia_5_0_hc_hg38.gtf  Raw sequence file with *.fastq.gz / *.fq.gz suffixed     mouse    hisat index: ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grcm38_tran.tar.gz  Genome reference: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M16/GRCm38.p5.genome.fa.gz  GENCODE gene annotation: ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M16/gencode.vM16.annotation.gtf.gz  LNCipedia gene annotation: null  Raw sequence file with *.fastq.gz / *.fq.gz suffixed", 
            "title": "Supported species"
        }, 
        {
            "location": "/#run-docker", 
            "text": "Prepare input files.  Modify the  docker.config  in  mandatory  section.  Install docker  Command nextflow -c docker.config run LncRNAanalysisPipe.nf    docker image can be downloaded from https://hub.docker.com/r/bioinformatist/lncpipe/tags/ with the latest tag.    Alternatively, nextflow can automatically pull image from docker.io.  Dockerfile  recorded  that what we have done with the image. For docker pull image from local china,  we suggest users using mirror site instead .", 
            "title": "Run Docker"
        }, 
        {
            "location": "/#dependencies", 
            "text": "Prerequisites install command (required when docker image is not favored, you should execute them via root)      HISAT2  aria2c ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.1.0-Linux_x86_64.zip -q -o /opt/hisat2-2.1.0-Linux_x86_64.zip   \\\nunzip -qq /opt/hisat2-2.1.0-Linux_x86_64.zip -d /opt/   \\\nrm /opt/hisat2-2.1.0-Linux_x86_64.zip   \\\ncd /opt/hisat2-2.1.0   \\\nrm -rf doc example *debug MANUAL* NEWS TUTORIAL   \\\nln -s /opt/hisat2-2.1.0/hisat2* /usr/local/bin/   \\\nln -sf /opt/hisat2-2.1.0/*.py /usr/local/bin/    StringTie     aria2c http://ccb.jhu.edu/software/stringtie/dl/stringtie-1.3.3b.Linux_x86_64.tar.gz -q -o /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz   \\\ntar xf /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz --use-compress-prog=pigz -C /opt/   \\\nrm /opt/stringtie-1.3.3b.Linux_x86_64/README   \\\nln -s /opt/stringtie-1.3.3b.Linux_x86_64/stringtie /usr/local/bin/stringtie   \\\nrm /opt/stringtie-1.3.3b.Linux_x86_64.tar.gz    gffcompare     aria2c https://github.com/gpertea/gffcompare/archive/master.zip -q -o /opt/gffcompare-master.zip   \\  \naria2c https://github.com/gpertea/gclib/archive/master.zip -q -o /opt/gclib-master.zip   \\  \nunzip -qq /opt/gffcompare-master.zip -d /opt/   \\  \nunzip -qq /opt/gclib-master.zip -d /opt/   \\  \nrm /opt/gffcompare-master.zip /opt/gclib-master.zip   \\  \ncd /opt/gffcompare-master   \\  \nmake release    Bedops :  aria2c https://github.com/bedops/bedops/releases/download/v2.4.29/bedops_linux_x86_64-v2.4.29.tar.bz2 -q -o /opt/bedops_linux_x86_64-v2.4.29.tar.bz2   \\\ntar xf /opt/bedops_linux_x86_64-v2.4.29.tar.bz2 --use-compress-prog=pbzip2 -C /opt/   \\\nln -s /opt/bin/* /usr/local/bin/   \\\nrm /opt/bedops_linux_x86_64-v2.4.29.tar.bz2    PLEK :  aria2c https://nchc.dl.sourceforge.net/project/plek/PLEK.1.2.tar.gz -q -o /opt/PLEK.1.2.tar.gz   \\\ntar xf /opt/PLEK.1.2.tar.gz --use-compress-prog=pigz -C /opt/   \\\ncd /opt/PLEK.1.2/   \\\npython PLEK_setup.py || :   \\\nrm *.pdf *.txt *.h *.c *.fa *.cpp *.o *.R *.doc PLEK_setup.py   \\\nchmod 755 *   \\\nperl -CD -pi -e'tr/\\x{feff}//d   s/[\\r\\n]+/\\n/' *.py   \\\nln -s /opt/PLEK.1.2/* /usr/local/bin/   \\\nrm /opt/PLEK.1.2.tar.gz    CNCI :    aria2c https://codeload.github.com/www-bioinfo-org/CNCI/zip/master -q -o /opt/CNCI-master.zip   \\\nunzip -qq /opt/CNCI-master.zip -d /opt/   \\\nrm /opt/CNCI-master.zip   \\\nunzip -qq /opt/CNCI-master/libsvm-3.0.zip -d /opt/CNCI-master/   \\\nrm /opt/CNCI-master/libsvm-3.0.zip   \\\ncd /opt/CNCI-master/libsvm-3.0   \\\nmake   /dev/null 2 1   \\\nshopt -s extglob   \\\nrm -rfv !\\(\"svm-predict\"\\|\"svm-scale\"\\)   \\\ncd ..   \\\nrm draw_class_pie.R LICENSE README.md   \\\nchmod -R 755 *   \\\nln -s /opt/CNCI-master/*.py /usr/local/bin/    CPAT : Citation  aria2c https://jaist.dl.sourceforge.net/project/rna-cpat/v1.2.3/CPAT-1.2.3.tar.gz -q -o /opt/CPAT-1.2.3.tar.gz   \\\ntar xf /opt/CPAT-1.2.3.tar.gz --use-compress-prog=pigz -C /opt/   \\\ncd /opt/CPAT-1.2.3/   \\\nmv dat/* /LncPipeDB/   \\\npython setup.py install   /dev/null 2 1   \\\nrm -rf /opt/CPAT*    FastQC  aria2c https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.5.zip -q -o /opt/fastqc_v0.11.5.zip   \\\nunzip -qq /opt/fastqc_v0.11.5.zip -d /opt/   \\\nrm /opt/fastqc_v0.11.5.zip   \\\ncd /opt/FastQC   \\\nshopt -s extglob   \\\nrm -rfv !\\(\"fastqc\"\\|*.jar\\)   \\\nchmod 755 *   \\\nln -s /opt/FastQC/fastqc /usr/local/bin/    or  AfterQC      aria2c https://github.com/OpenGene/AfterQC/archive/v0.9.7.tar.gz -q -o /opt/AfterQC-0.9.7.tar.gz   \\\n    tar xf /opt/AfterQC-0.9.7.tar.gz --use-compress-prog=pigz -C /opt/   \\\n    cd /opt/AfterQC-0.9.7   \\\n    make   \\\n    perl -i -lape's/python/pypy/ if $. == 1' after.py   \\\n    rm -rf Dockerfile Makefile README.md testdata report_sample   \\\n    rm editdistance/*.cpp editdistance/*.h   \\\n    ln -s /opt/AfterQC-0.9.7/*.py /usr/local/bin/   \\\n    rm /opt/AfterQC-0.9.7.tar.gz  When using afterQC, we recommended that users install  pypy  in your operation system, which can accelerated about 3X speed for raw reads processing, as  suggested  by author of AfterQC.    LncPipeReporter  Install [pandoc](https://pandoc.org/installing.html) first. Then run commands:\n\nRscript -e \"install.packages('devtools'); devtools::install_github('bioinformatist/LncPipeReporter')\"\n\nFor detailed usage of LncPipeReporter in case you are going to run it separately, plz refers to [README](https://github.com/bioinformatist/LncPipeReporter#lncpipereporter) of LncPipeReporter.    kallisto  aria2c https://github.com/pachterlab/kallisto/releases/download/v0.43.1/kallisto_linux-v0.43.1.tar.gz -q -o  /opt/kallisto_linux-v0.43.1.tar.gz   \\\ntar xf /opt/kallisto_linux-v0.43.1.tar.gz --use-compress-prog=pigz -C /opt/   \\\ncd /opt   \\\nrm ._* kallisto_linux-v0.43.1.tar.gz   \\\ncd kallisto_linux-v0.43.1   \\\nrm -rf ._*  README.md test   \\\nln -s /opt/kallisto_linux-v0.43.1/kallisto /usr/local/bin/    sambamba      aria2c https://github.com/biod/sambamba/releases/download/v0.6.7/sambamba_v0.6.7_linux.tar.bz2 -q -o /opt/sambamba_v0.6.7_linux.tar.bz2   \\\n    tar xf /opt/sambamba_v0.6.7_linux.tar.bz2 --use-compress-prog=pbzip2 -C /opt/   \\\n    ln -s /opt/sambamba /usr/local/bin/   \\\n    rm /opt/sambamba_v0.6.7_linux.tar.bz2    Alternatively, when you are going to using STAR-Cufflinks in your system, the corresponding installation command should be as follows:       STAR  aria2c https://raw.githubusercontent.com/alexdobin/STAR/master/bin/Linux_x86_64/STAR -q -o /opt/STAR   \\\nchmod 755 /opt/STAR   \\\nln -s /opt/STAR /usr/local/bin    Cufflinks  aria2c https://github.com/bioinformatist/cufflinks/releases/download/v2.2.1/cufflinks-2.2.1.Linux_x86_64.tar.gz -q -o /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz   \\\ntar xf /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz --use-compress-prog=pigz -C /opt/   \\\nrm /opt/cufflinks-2.2.1.Linux_x86_64/README   \\\nln -s /opt/cufflinks-2.2.1.Linux_x86_64/* /usr/local/bin/   \\\nrm /opt/cufflinks-2.2.1.Linux_x86_64.tar.gz     The  gffcompare  utility share the same function as  cuffcompare , therefore, in STAR-cufflinks analysis pipe  gffcompare  is not required.", 
            "title": "Dependencies"
        }, 
        {
            "location": "/#interactive-reports", 
            "text": "LncPipe output was well-summarized in an interactive manner, which was carried out by a novel-developing R package LncPipeReporter .", 
            "title": "Interactive reports"
        }, 
        {
            "location": "/#configuration", 
            "text": "As a nextflow-based analysis pipeline, LncPipe allow users edit configure file  nextflow.config  to set the index files and default file path parameters instead of typing in command.\nWe strongly recommended that users using config file rather than command input to adjust their parameters.\nFor example, plz go to  params  line, and set the following information of your operation system and environment\ngroovy      params {\n    /*\n        User setting options (mandatory)\n         */\n    // input file and genome reference()\n        fastq_ext = '*_{1,2}.clean.fq.gz'\n        fasta_ref = '/data/database/hg38/genome.fa'\n        design = 'design.file'\n        hisat2_index = '/data/database/hg38/hisatIndex/grch38_snp_tran/genome_snp_tran'\n        gencode_annotation_gtf = \"/data/database/hg38/Annotation/gencode.v24.annotation.gtf\"\n        lncipedia_gtf = \"/data/database/hg38/Annotation/lncipedia_4_0_hg38.gtf\"\n        cpatpath = '/home/zhaoqi/software/CPAT/CPAT-1.2.2'\n\n    /*\n        User setting options (optional)\n         */\n        star_idex = ''//set if star used\n        bowtie2_index = ''//set if tophat used\n        aligner = \"hisat\" // or \"star\",\"tophat\"\n        sam_processor=\"sambamba\"//or \"samtools\"\n        qctools = \"fastqc\" // or \"afterqc\",\"fastp\"\n        singleEnd = false\n        unstrand = false\n        skip_combine = false\n        lncRep_Output = 'reporter.html'\n        lncRep_theme = 'npg'\n        lncRep_cdf_percent = 10\n        lncRep_max_lnc_len = 10000\n        lncRep_min_expressed_sample = 50\n        mem=60//Gb\n        cpu=30\n    }", 
            "title": "Configuration"
        }, 
        {
            "location": "/#parameters", 
            "text": "Those parameters would cover the setting from  nextflow.config  file  Mandatory(plz configure those in  nextflow.config* file)      Name  Example/Default value  Description      --input_folder  .  input folder    --species  human  Your species, mouse, fly and zebra fish are also supported    --fastq_ext  *_{1,2}.fastq.gz  input raw paired reads    --out_folder  .  output folder    --design  FALSE  a txt file that stored experimental design information, plz see details from  --design  section below      References      Name  Required  Description      --star_index/--bowtie2_index/--hisat2_index  -  Path to STAR\uff0fbowtie2/hisat2(mutually exclusive) index(required if not set in config file)    --fasta  -  Path to Fasta reference(required if not set in config file)    --gencode_annotation_gtf  -  An annotation file from GENCODE database for annotating lncRNAs(required if not set in config file). e.g.  gencode.v26.annotation.gtf    --lncipedia_gtf  -  An annotation file from LNCipedia database for annotating lncRNAs(required if not set in config file) e.g.  lncipedia_4_0_hc_hg38.gtf      software path (should not setting when using docker )      Name  Required  Description      --cpatpath  -  Home folder of cpat installed location      since cpat may call model data from its home path, users should specified where the model file is located in. Especially users install cpat by themselves without our install code.      Optional      Name  Default value  Description      --singleEnd  FALSE  specify that the reads are single ended    --merged_gtf  FALSE  Skip mapping and assembly step by directly providing assembled merged gtf files    --unstrand  FALSE  specify that library is unstrand specific    --aligner  star  Aligner for reads mapping (optional), STAR is default and supported only at present, star / tophat / hisat2    --qctools  afterqc  Tools for assess raw reads quality or filtered by AfterQC,  fastqc  or  afterqc      LncPipeReporter options      Name  Default value  Description      --lncRep_Output  reporter.html  Specify report file name.    --lncRep_theme  npg  Plot theme setting in interactive plot. Values from  ggsci    --lncRep_min_expressed_sample  50  Minimum expressed gene allowed in each sample, 50 default. Samples not passed were filtered from analysis     --fastq_ext   Raw fastq files were required for denovo analysis.This parameters should be set according to your paired or singled reads file names.\nSuppose your paired end sequence files are compressed with  .gz  suffixed.\nFor example:       Sample1_1.fq.gz\n    Sample1_2.fq.gz\n    Sample2_1.fq.gz\n    Sample2_2.fq.gz  Then you can input pattern  *_{1,2}.fq.gz  to make the all paired end file recognized by  LncPipe  .  For singled reads file, file pattern should be feed with  --singleEnd  specified.  --star_idex\uff0f--bowtie2_index/--hisat2_index   This parameter is  required  when not configured in nextflow.config file. It specify the star/tophat/hisat2(mutually exclusive) index folder built before running  LncPipe  .\nIf you don't know what it is\uff0cYou can use  --fasta  to specify the reference sequence data. The index file would be built by  LncPipe   automatically.   --design   Experimental design file matrix for differential expression analysis. Default:  null \nFormat:   WT:Sample1,Sample2,Sample3\nKO:Sample1,Sample2,Sample3  While  KO/WT  represents the two experimental condition, and sample1, sample2, sample3 are replicates which should be comma-delimited in the same line .  For sample names, it should be the sample as the prefix of fastq files which was trimmed by  --fastq_ext .  For example:  if fastq file names are  Sample1_1.fq.gz, Sample1_2.fq.gz  that comes from one sample and your  --fastq_ext  is set as  *_{1,2}.fq.gz , the sample name\nshould be Sample1.", 
            "title": "Parameters"
        }, 
        {
            "location": "/#output", 
            "text": "While the whole pipeline is finished properly, there is  Result  folder under current path(default) or output_folder set by user. The basic structure of Result is follows:      Result/\n    \u251c\u2500\u2500 QC\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141_1.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141_2.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1177_1.clean_fastqc.html\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 N1177_2.clean_fastqc.html\n    \u251c\u2500\u2500 Identified_lncRNA\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 all_lncRNA_for_classifier.gtf\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 final_all.fa\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 final_all.gtf\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 lncRNA.fa\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 protein_coding.fa\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 protein_coding.final.gtf\n    \u251c\u2500\u2500 LncReporter\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 Differential_Expression_analysis.csv\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 Report.html\n    \u251c\u2500\u2500 Quantification\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 kallisto.count.txt\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 kallisto.tpm.txt\n    \u2514\u2500\u2500 Star_alignment\n        \u251c\u2500\u2500 STAR_N1141\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Aligned.sortedByCoord.out.bam\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.final.out\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.out\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 N1141Log.progress.out\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 N1141SJ.out.tab\n        \u2514\u2500\u2500 STAR_N1177\n            \u251c\u2500\u2500 N1177Aligned.sortedByCoord.out.bam\n            \u251c\u2500\u2500 N1177Log.final.out\n            \u251c\u2500\u2500 N1177Log.out\n            \u251c\u2500\u2500 N1177Log.progress.out\n            \u2514\u2500\u2500 N1177SJ.out.tab   QC  stored the Quality control output generated by FastQC or AfterQC software.  Identified_lncRNA  contains all assembled lncRNA and their sequences.  all_lncRNA_for_classifier.gtf  includes both novel and known lncRNA features in  GTF format ; lncRNA.fa  is all lncRNA sequences in fasta format.  protein_coding.final.gtf  and  protein_coding.fa  are protein coding information extracted from gencode annotation.  final_all.gtf  and  final_all.fa  are combined files for further analysis.  Alignment  are hisat/tophat/STAR aligner standard output  Quantification  are estimated abundance using kallisto.  kallisto.count.txt  stored reads count matrix and  kallisto.tpm.txt  are tpm(Transcripts Per Kilobase Million) matrix.  LncReporter  stored the interactive report file and differential expression matrix generated by LncPipeReporter which wrapped EdgeR.", 
            "title": "Output"
        }, 
        {
            "location": "/#tips", 
            "text": ":blush:Plz keep the consistency of your genome sequence, index library and annotation files: genome version, chromosome format, gtf coordinated e.g. The third-party software may stop for any of the above reasons.   :confused:Setting your analysis parameters always in config file, differ project should  corresponding to differ configurations for reproductive analysis. To rerun a project, you can just specify -c  your.config  in your command, which can also help you to record analysis parameters.  :open_mouth:Run analysis on docker container, no much to say.  :grimacing:Always use the latest version to be away from the known bugs.", 
            "title": "Tips"
        }, 
        {
            "location": "/#acknowledgement", 
            "text": "Thanks to the author of  AfterQC , Shifu Chen, for his help on providing a gzip output support to meet the require of LncPipe.  Thanks to the internal test by Hongwan Zhang and Yan Wang from SYSUCC Cancer bioinformatics platform.", 
            "title": "Acknowledgement"
        }, 
        {
            "location": "/#faq", 
            "text": "1. PLEK throws an error \"/data/software/PLEK.1.2/PLEK.py:line12: $'\\r': can not find command\", how to fix?   A: using the follow command as suggested in the installation section.    perl -CD -pi -e'tr/\\x{feff}//d   s/[\\r\\n]+/\\n/' *.py    2. IOError: [Errno 2] No such file or directory: '/opt/CPAT-1.2.3/dat/Human_Hexamer.tsv'?   A: The cpat command required  the  Human_Hexamer.tsv  to predict lncRNA coding potential, plz check your  cpatpath  parameters.     3. When using htseq to quantify transicript, it throws \"Error occured when reading beginning of SAM/BAM file. 'csamtools.AlignedRead' object has no attribute 'reference_start' \"  A: It's a version conflict caused by htseq and hisat generated bamfile, a possible solution for this is to install the old version of htseq", 
            "title": "FAQ"
        }, 
        {
            "location": "/#contact", 
            "text": "For implementation:    Qi Zhao  zhaoqi@sysucc.org.cn, Sun Yat-sen University Cancer Center;    Yu Sun   sun_yu@mail.nankai.edu.cn, Nan kai University; \nFor project design and new feature request:    Qi Zhao  zhaoqi@sysucc.org.cn, Sun Yat-sen University Cancer Center;    Zhixiang Zuo  zuozhx@sysucc.org.cn, Sun Yat-sen University Cancer Center;     We strongly recommend users open new issues if they have questions or find bugs.", 
            "title": "Contact"
        }, 
        {
            "location": "/#license", 
            "text": "GPL v3 license", 
            "title": "License"
        }, 
        {
            "location": "/#citation", 
            "text": "", 
            "title": "Citation"
        }, 
        {
            "location": "/about/", 
            "text": "", 
            "title": "About"
        }
    ]
}